diff --git a/cpu/BOOTCODE/boot.c b/cpu/BOOTCODE/boot.c
index 2594dbe..fa627e0 100644
--- a/cpu/BOOTCODE/boot.c
+++ b/cpu/BOOTCODE/boot.c
@@ -20,7 +20,7 @@ uart0_read(unsigned char *buf, unsigned int len)
     uart0_set_rx(g_uart0_rx_buffer_loc | len);
 
     while (g_uart0_rx_intr_pending == 1)
-        ;
+        gpio_set_out((rdtime() >> 21) & 1);
 
     for (unsigned int i = 0; i < len; ++i, buf++, rx_buf++) {
         if ((i & 0xf) == 0) {
@@ -52,7 +52,7 @@ uart0_write(unsigned char *buf, unsigned int len)
 
     uart0_set_tx(g_uart0_tx_buffer_loc | len);
     while (g_uart0_tx_intr_pending == 1)
-        ;
+        gpio_set_out((rdtime() >> 23) & 1);
         
     return 0;
 }
@@ -96,54 +96,10 @@ main(void)
     gpio_set_dir(1);
     gpio_set_out(1);
 
+    num = 0;
     while (1) {
-        uart0_read(buf, 1);
-        switch (buf[0]) {
-            case 'a':
-                uart0_read(buf, 5);     /* 4 bytes + 1 checksum */
-                if (conv_5b_to_int(buf, &num) == 0) {
-                    mem_ptr = (unsigned int *)num;
-                    buf[0] = 'O';
-                } else {
-                    buf[0] = 'E';
-                }
-                uart0_write(buf, 1);
-                break;
-            case 'w':
-                uart0_read(buf, 5);     /* 4 bytes + 1 checksum */
-                if (conv_5b_to_int(buf, &num) == 0) {
-                    *mem_ptr = num;
-                    if ((((unsigned int)mem_ptr) & 0xf) == 0xc) {
-                        flush_line(((unsigned int)mem_ptr) & 0xfffffff0);
-                    }
-                    ++mem_ptr;
-                    buf[0] = 'O';
-                } else {
-                    buf[0] = 'E';
-                }
-                uart0_write(buf, 1);
-                break;
-            case 'r':
-                memcpy(buf, (unsigned char *)mem_ptr, 4);
-                buf[4] = buf[0] ^ buf[1] ^ buf[2] ^ buf[3];
-                ++mem_ptr;
-                uart0_write(buf, 5);
-                break;
-            case 'v':
-                buf[0] = '1';
-                uart0_write(buf, 1);
-                break;
-            case 'j':
-                buf[0] = 'O';
-                uart0_write(buf, 1);
-                asm("fence.i");
-                asm volatile("jalr ra, %0;" : : "r"(mem_ptr));
-                /* XXX - presently not reached, but we may allow returns in the future */
-                break;
-            default:
-                buf[0] = 'E';
-                uart0_write(buf, 1);
-                break;
-        }
+        gpio_set_out((rdtime() >> 25) & 1);
+        buf[0] = num++ & 0xff;
+        uart0_write(buf, 1);
     }
 }
diff --git a/cpu/csr_uart_rs232.vhd b/cpu/csr_uart_rs232.vhd
index 324873e..fe964e5 100644
--- a/cpu/csr_uart_rs232.vhd
+++ b/cpu/csr_uart_rs232.vhd
@@ -136,7 +136,7 @@ begin
             when RXD_RUNNING =>
                 if (rx_counter = "00000000000") then
                     rx_datareg_clk <= '1';
-                    rx_counter <= "01010111000"; -- 348 * 2 = 696 (0x2b8)
+                    rx_counter <= "01010111010"; -- 348 * 2 = 696 (0x2b8)
                     rx_bitnr <= std_logic_vector(unsigned(rx_bitnr) + 1);
                     if (rx_bitnr = "0111") then
                         rxd_state <= RXD_CHECK_STOPBIT;
@@ -196,7 +196,7 @@ end process;
 tx_clk_gen: process(clk)
 begin
     if (rising_edge(clk)) then
-        if (unsigned(tx_clk_ctr) = 348) then
+        if (unsigned(tx_clk_ctr) = 351) then
             tx_clk <= not tx_clk;
             tx_clk_ctr <= (others => '0');
         else
